{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","className","style","list","map","option","btn","name","onClick","Section","title","children","container","Notification","message","App","state","btnClickHandler","e","stateValue","target","setState","prevState","countTotalFeedback","this","toFixed","Object","keys","countPositiveFeedbackPercentage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"6RAYeA,MAVf,YAAsE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,mBAC7C,OAAO,qCACH,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,yCAAYC,KACZ,qDAAwBC,EAAxB,Y,gBCQOC,MAbf,YAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,gBAChC,OAAO,oBAAIC,UAAWC,IAAMC,KAArB,SACFJ,EAAQK,KAAI,SAACC,GACV,OAAO,6BACP,wBAAQJ,UAAWC,IAAMI,IAAKC,KAAMF,EAAQG,QAASR,EAArD,SACKK,KAFWA,S,gBCIbI,MAPf,YAAqC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,SACtB,OAAO,sBAAKV,UAAWC,IAAMU,UAAtB,UACH,oBAAIX,UAAWC,IAAMQ,MAArB,SAA6BA,IAC5BC,MCEME,MANf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,4BAAIA,KCqDGC,E,4MAjDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPsB,gBAAkB,SAACC,GACjB,IAAMC,EAAaD,EAAEE,OAAOb,KAC5B,EAAKc,UAAS,SAACC,GAAD,sBACXH,EAAaG,EAAUH,GAAc,O,EAG1CI,mBAAqB,WACnB,MAA+B,EAAKP,MAEpC,OAFA,EAAQvB,KAAR,EAAcC,QAAd,EAAuBC,K,qEAIzB,WACE,OAAO6B,KAAKD,sBACNC,KAAKR,MAAMvB,KAAO+B,KAAKD,qBAAwB,KAAKE,QAAQ,GAC9D,I,oBAEN,WACE,MAA+BD,KAAKR,MAA5BvB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKM,UAAU,MAAf,UACE,cAAC,EAAD,CAASS,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS2B,OAAOC,KAAKH,KAAKR,OAC1BhB,gBAAiBwB,KAAKP,oBAG1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGc,KAAKD,qBACJ,cAAC,EAAD,CACE9B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO4B,KAAKD,qBACZ1B,mBAAoB2B,KAAKI,oCAG3B,cAAC,EAAD,CAAcd,QAAQ,+B,GA1ChBe,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,KAAO,8BAA8B,IAAM,+B,kBCA7DD,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,UAAY,8B","file":"static/js/main.26f61e93.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}){\r\n    return <>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total : {total}</p>\r\n        <p> Positive feedback: {positivePercentage}% </p>\r\n    </>\r\n}\r\n\r\nexport default Statistics","import React from 'react'\r\nimport style from './FeedbackOptions.module.css'\r\n\r\nfunction FeedbackOptions ({options, onLeaveFeedback}){\r\n    return <ul className={style.list}>\r\n        {options.map((option)=>{\r\n            return <li key={option}>\r\n            <button className={style.btn} name={option} onClick={onLeaveFeedback}>\r\n                {option}\r\n            </button>\r\n        </li>\r\n        })}\r\n        \r\n    </ul>\r\n}\r\n\r\nexport default FeedbackOptions","import React from 'react'\r\nimport style from './Section.module.css'\r\n\r\nfunction Section ({title, children}){\r\n    return <div className={style.container}>\r\n        <h2 className={style.title}>{title}</h2>\r\n        {children}\r\n    </div>\r\n}\r\n\r\nexport default Section","import React from 'react';\r\n\r\nfunction Notification ({message})  {\r\n    return (\r\n        <p>{message}</p>\r\n    );\r\n};\r\n\r\nexport default Notification;","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  btnClickHandler = (e) => {\n    const stateValue = e.target.name;\n    this.setState((prevState) => ({\n      [stateValue]: prevState[stateValue] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const totalFeed = good + neutral + bad;\n    return totalFeed;\n  };\n  countPositiveFeedbackPercentage() {\n    return this.countTotalFeedback()\n      ? ((this.state.good / this.countTotalFeedback()) * 100).toFixed(1)\n      : 0;\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.btnClickHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__14JNl\",\"btn\":\"FeedbackOptions_btn__37s-X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__28pBF\",\"container\":\"Section_container__31Z92\"};"],"sourceRoot":""}